<?php
/**
 * InquiryModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  PhpApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * KountRISSwaggerV02
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.6-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace PhpApi\Khash;

use \ArrayAccess;
use \PhpApi\ObjectSerializer;

/**
 * InquiryModel Class Doc Comment
 *
 * @category Class
 * @package  PhpApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InquiryModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InquiryModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'card_no' => 'string',
        'total' => 'int',
        'ip_address' => 'string',
        'email' => 'string',
        'session_id' => 'string',
        'mack' => 'string',
        'product_type' => 'string',
        'product_item' => 'string',
        'product_description' => 'string',
        'product_quantity' => 'int',
        'product_price' => 'int',
        'anid' => 'string',
        'mode' => 'string',
        'customer_id' => 'string',
        'date_of_birth' => 'string',
        'gender' => 'string',
        'currency' => 'string',
        'sdk_version' => 'string',
        'user_agent' => 'string',
        'name' => 'string',
        'unique' => 'string',
        'set_epoch' => 'int',
        'cash' => 'string',
        'ship_type' => 'string',
        'billing_phone_number' => 'string',
        'shipping_phone_number' => 'string',
        'shipping_name' => 'string',
        'shipping_email' => 'string',
        'website' => 'string',
        'cart' => 'string',
        'billing_address' => '\PhpApi\Khash\BillingAddress[]',
        'billing_address_with_premise' => '\PhpApi\Khash\BillingAddressWithPremise[]',
        'shipping_address' => '\PhpApi\Khash\ShippingAddress[]',
        'shipping_address_with_premise' => '\PhpApi\Khash\ShippingAddressWithPremise[]',
        'user_defined_field' => '\PhpApi\Khash\UserDefinedField[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'card_no' => null,
        'total' => 'int32',
        'ip_address' => null,
        'email' => null,
        'session_id' => null,
        'mack' => null,
        'product_type' => null,
        'product_item' => null,
        'product_description' => null,
        'product_quantity' => 'int64',
        'product_price' => 'int64',
        'anid' => null,
        'mode' => null,
        'customer_id' => null,
        'date_of_birth' => null,
        'gender' => null,
        'currency' => null,
        'sdk_version' => null,
        'user_agent' => null,
        'name' => null,
        'unique' => null,
        'set_epoch' => 'int64',
        'cash' => null,
        'ship_type' => null,
        'billing_phone_number' => null,
        'shipping_phone_number' => null,
        'shipping_name' => null,
        'shipping_email' => null,
        'website' => null,
        'cart' => null,
        'billing_address' => null,
        'billing_address_with_premise' => null,
        'shipping_address' => null,
        'shipping_address_with_premise' => null,
        'user_defined_field' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'card_no' => 'CardNo',
        'total' => 'Total',
        'ip_address' => 'IpAddress',
        'email' => 'Email',
        'session_id' => 'SessionId',
        'mack' => 'Mack',
        'product_type' => 'ProductType',
        'product_item' => 'ProductItem',
        'product_description' => 'ProductDescription',
        'product_quantity' => 'ProductQuantity',
        'product_price' => 'ProductPrice',
        'anid' => 'ANID',
        'mode' => 'Mode',
        'customer_id' => 'CustomerId',
        'date_of_birth' => 'DateOfBirth',
        'gender' => 'Gender',
        'currency' => 'Currency',
        'sdk_version' => 'SdkVersion',
        'user_agent' => 'UserAgent',
        'name' => 'Name',
        'unique' => 'Unique',
        'set_epoch' => 'SetEpoch',
        'cash' => 'Cash',
        'ship_type' => 'ShipType',
        'billing_phone_number' => 'BillingPhoneNumber',
        'shipping_phone_number' => 'ShippingPhoneNumber',
        'shipping_name' => 'ShippingName',
        'shipping_email' => 'ShippingEmail',
        'website' => 'Website',
        'cart' => 'Cart',
        'billing_address' => 'billingAddress',
        'billing_address_with_premise' => 'billingAddressWithPremise',
        'shipping_address' => 'shippingAddress',
        'shipping_address_with_premise' => 'shippingAddressWithPremise',
        'user_defined_field' => 'userDefinedField'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'card_no' => 'setCardNo',
        'total' => 'setTotal',
        'ip_address' => 'setIpAddress',
        'email' => 'setEmail',
        'session_id' => 'setSessionId',
        'mack' => 'setMack',
        'product_type' => 'setProductType',
        'product_item' => 'setProductItem',
        'product_description' => 'setProductDescription',
        'product_quantity' => 'setProductQuantity',
        'product_price' => 'setProductPrice',
        'anid' => 'setAnid',
        'mode' => 'setMode',
        'customer_id' => 'setCustomerId',
        'date_of_birth' => 'setDateOfBirth',
        'gender' => 'setGender',
        'currency' => 'setCurrency',
        'sdk_version' => 'setSdkVersion',
        'user_agent' => 'setUserAgent',
        'name' => 'setName',
        'unique' => 'setUnique',
        'set_epoch' => 'setSetEpoch',
        'cash' => 'setCash',
        'ship_type' => 'setShipType',
        'billing_phone_number' => 'setBillingPhoneNumber',
        'shipping_phone_number' => 'setShippingPhoneNumber',
        'shipping_name' => 'setShippingName',
        'shipping_email' => 'setShippingEmail',
        'website' => 'setWebsite',
        'cart' => 'setCart',
        'billing_address' => 'setBillingAddress',
        'billing_address_with_premise' => 'setBillingAddressWithPremise',
        'shipping_address' => 'setShippingAddress',
        'shipping_address_with_premise' => 'setShippingAddressWithPremise',
        'user_defined_field' => 'setUserDefinedField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'card_no' => 'getCardNo',
        'total' => 'getTotal',
        'ip_address' => 'getIpAddress',
        'email' => 'getEmail',
        'session_id' => 'getSessionId',
        'mack' => 'getMack',
        'product_type' => 'getProductType',
        'product_item' => 'getProductItem',
        'product_description' => 'getProductDescription',
        'product_quantity' => 'getProductQuantity',
        'product_price' => 'getProductPrice',
        'anid' => 'getAnid',
        'mode' => 'getMode',
        'customer_id' => 'getCustomerId',
        'date_of_birth' => 'getDateOfBirth',
        'gender' => 'getGender',
        'currency' => 'getCurrency',
        'sdk_version' => 'getSdkVersion',
        'user_agent' => 'getUserAgent',
        'name' => 'getName',
        'unique' => 'getUnique',
        'set_epoch' => 'getSetEpoch',
        'cash' => 'getCash',
        'ship_type' => 'getShipType',
        'billing_phone_number' => 'getBillingPhoneNumber',
        'shipping_phone_number' => 'getShippingPhoneNumber',
        'shipping_name' => 'getShippingName',
        'shipping_email' => 'getShippingEmail',
        'website' => 'getWebsite',
        'cart' => 'getCart',
        'billing_address' => 'getBillingAddress',
        'billing_address_with_premise' => 'getBillingAddressWithPremise',
        'shipping_address' => 'getShippingAddress',
        'shipping_address_with_premise' => 'getShippingAddressWithPremise',
        'user_defined_field' => 'getUserDefinedField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['card_no'] = isset($data['card_no']) ? $data['card_no'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['ip_address'] = isset($data['ip_address']) ? $data['ip_address'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['session_id'] = isset($data['session_id']) ? $data['session_id'] : null;
        $this->container['mack'] = isset($data['mack']) ? $data['mack'] : null;
        $this->container['product_type'] = isset($data['product_type']) ? $data['product_type'] : null;
        $this->container['product_item'] = isset($data['product_item']) ? $data['product_item'] : null;
        $this->container['product_description'] = isset($data['product_description']) ? $data['product_description'] : null;
        $this->container['product_quantity'] = isset($data['product_quantity']) ? $data['product_quantity'] : null;
        $this->container['product_price'] = isset($data['product_price']) ? $data['product_price'] : null;
        $this->container['anid'] = isset($data['anid']) ? $data['anid'] : null;
        $this->container['mode'] = isset($data['mode']) ? $data['mode'] : null;
        $this->container['customer_id'] = isset($data['customer_id']) ? $data['customer_id'] : null;
        $this->container['date_of_birth'] = isset($data['date_of_birth']) ? $data['date_of_birth'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['sdk_version'] = isset($data['sdk_version']) ? $data['sdk_version'] : null;
        $this->container['user_agent'] = isset($data['user_agent']) ? $data['user_agent'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['unique'] = isset($data['unique']) ? $data['unique'] : null;
        $this->container['set_epoch'] = isset($data['set_epoch']) ? $data['set_epoch'] : null;
        $this->container['cash'] = isset($data['cash']) ? $data['cash'] : null;
        $this->container['ship_type'] = isset($data['ship_type']) ? $data['ship_type'] : null;
        $this->container['billing_phone_number'] = isset($data['billing_phone_number']) ? $data['billing_phone_number'] : null;
        $this->container['shipping_phone_number'] = isset($data['shipping_phone_number']) ? $data['shipping_phone_number'] : null;
        $this->container['shipping_name'] = isset($data['shipping_name']) ? $data['shipping_name'] : null;
        $this->container['shipping_email'] = isset($data['shipping_email']) ? $data['shipping_email'] : null;
        $this->container['website'] = isset($data['website']) ? $data['website'] : null;
        $this->container['cart'] = isset($data['cart']) ? $data['cart'] : null;
        $this->container['billing_address'] = isset($data['billing_address']) ? $data['billing_address'] : null;
        $this->container['billing_address_with_premise'] = isset($data['billing_address_with_premise']) ? $data['billing_address_with_premise'] : null;
        $this->container['shipping_address'] = isset($data['shipping_address']) ? $data['shipping_address'] : null;
        $this->container['shipping_address_with_premise'] = isset($data['shipping_address_with_premise']) ? $data['shipping_address_with_premise'] : null;
        $this->container['user_defined_field'] = isset($data['user_defined_field']) ? $data['user_defined_field'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets card_no
     *
     * @return string
     */
    public function getCardNo()
    {
        return $this->container['card_no'];
    }

    /**
     * Sets card_no
     *
     * @param string $card_no card_no
     *
     * @return $this
     */
    public function setCardNo($card_no)
    {
        $this->container['card_no'] = $card_no;

        return $this;
    }

    /**
     * Gets total
     *
     * @return int
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     *
     * @param int $total total
     *
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets ip_address
     *
     * @return string
     */
    public function getIpAddress()
    {
        return $this->container['ip_address'];
    }

    /**
     * Sets ip_address
     *
     * @param string $ip_address ip_address
     *
     * @return $this
     */
    public function setIpAddress($ip_address)
    {
        $this->container['ip_address'] = $ip_address;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets session_id
     *
     * @return string
     */
    public function getSessionId()
    {
        return $this->container['session_id'];
    }

    /**
     * Sets session_id
     *
     * @param string $session_id session_id
     *
     * @return $this
     */
    public function setSessionId($session_id)
    {
        $this->container['session_id'] = $session_id;

        return $this;
    }

    /**
     * Gets mack
     *
     * @return string
     */
    public function getMack()
    {
        return $this->container['mack'];
    }

    /**
     * Sets mack
     *
     * @param string $mack mack
     *
     * @return $this
     */
    public function setMack($mack)
    {
        $this->container['mack'] = $mack;

        return $this;
    }

    /**
     * Gets product_type
     *
     * @return string
     */
    public function getProductType()
    {
        return $this->container['product_type'];
    }

    /**
     * Sets product_type
     *
     * @param string $product_type product_type
     *
     * @return $this
     */
    public function setProductType($product_type)
    {
        $this->container['product_type'] = $product_type;

        return $this;
    }

    /**
     * Gets product_item
     *
     * @return string
     */
    public function getProductItem()
    {
        return $this->container['product_item'];
    }

    /**
     * Sets product_item
     *
     * @param string $product_item product_item
     *
     * @return $this
     */
    public function setProductItem($product_item)
    {
        $this->container['product_item'] = $product_item;

        return $this;
    }

    /**
     * Gets product_description
     *
     * @return string
     */
    public function getProductDescription()
    {
        return $this->container['product_description'];
    }

    /**
     * Sets product_description
     *
     * @param string $product_description product_description
     *
     * @return $this
     */
    public function setProductDescription($product_description)
    {
        $this->container['product_description'] = $product_description;

        return $this;
    }

    /**
     * Gets product_quantity
     *
     * @return int
     */
    public function getProductQuantity()
    {
        return $this->container['product_quantity'];
    }

    /**
     * Sets product_quantity
     *
     * @param int $product_quantity product_quantity
     *
     * @return $this
     */
    public function setProductQuantity($product_quantity)
    {
        $this->container['product_quantity'] = $product_quantity;

        return $this;
    }

    /**
     * Gets product_price
     *
     * @return int
     */
    public function getProductPrice()
    {
        return $this->container['product_price'];
    }

    /**
     * Sets product_price
     *
     * @param int $product_price product_price
     *
     * @return $this
     */
    public function setProductPrice($product_price)
    {
        $this->container['product_price'] = $product_price;

        return $this;
    }

    /**
     * Gets anid
     *
     * @return string
     */
    public function getAnid()
    {
        return $this->container['anid'];
    }

    /**
     * Sets anid
     *
     * @param string $anid anid
     *
     * @return $this
     */
    public function setAnid($anid)
    {
        $this->container['anid'] = $anid;

        return $this;
    }

    /**
     * Gets mode
     *
     * @return string
     */
    public function getMode()
    {
        return $this->container['mode'];
    }

    /**
     * Sets mode
     *
     * @param string $mode mode
     *
     * @return $this
     */
    public function setMode($mode)
    {
        $this->container['mode'] = $mode;

        return $this;
    }

    /**
     * Gets customer_id
     *
     * @return string
     */
    public function getCustomerId()
    {
        return $this->container['customer_id'];
    }

    /**
     * Sets customer_id
     *
     * @param string $customer_id customer_id
     *
     * @return $this
     */
    public function setCustomerId($customer_id)
    {
        $this->container['customer_id'] = $customer_id;

        return $this;
    }

    /**
     * Gets date_of_birth
     *
     * @return string
     */
    public function getDateOfBirth()
    {
        return $this->container['date_of_birth'];
    }

    /**
     * Sets date_of_birth
     *
     * @param string $date_of_birth date_of_birth
     *
     * @return $this
     */
    public function setDateOfBirth($date_of_birth)
    {
        $this->container['date_of_birth'] = $date_of_birth;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets sdk_version
     *
     * @return string
     */
    public function getSdkVersion()
    {
        return $this->container['sdk_version'];
    }

    /**
     * Sets sdk_version
     *
     * @param string $sdk_version sdk_version
     *
     * @return $this
     */
    public function setSdkVersion($sdk_version)
    {
        $this->container['sdk_version'] = $sdk_version;

        return $this;
    }

    /**
     * Gets user_agent
     *
     * @return string
     */
    public function getUserAgent()
    {
        return $this->container['user_agent'];
    }

    /**
     * Sets user_agent
     *
     * @param string $user_agent user_agent
     *
     * @return $this
     */
    public function setUserAgent($user_agent)
    {
        $this->container['user_agent'] = $user_agent;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets unique
     *
     * @return string
     */
    public function getUnique()
    {
        return $this->container['unique'];
    }

    /**
     * Sets unique
     *
     * @param string $unique unique
     *
     * @return $this
     */
    public function setUnique($unique)
    {
        $this->container['unique'] = $unique;

        return $this;
    }

    /**
     * Gets set_epoch
     *
     * @return int
     */
    public function getSetEpoch()
    {
        return $this->container['set_epoch'];
    }

    /**
     * Sets set_epoch
     *
     * @param int $set_epoch set_epoch
     *
     * @return $this
     */
    public function setSetEpoch($set_epoch)
    {
        $this->container['set_epoch'] = $set_epoch;

        return $this;
    }

    /**
     * Gets cash
     *
     * @return string
     */
    public function getCash()
    {
        return $this->container['cash'];
    }

    /**
     * Sets cash
     *
     * @param string $cash cash
     *
     * @return $this
     */
    public function setCash($cash)
    {
        $this->container['cash'] = $cash;

        return $this;
    }

    /**
     * Gets ship_type
     *
     * @return string
     */
    public function getShipType()
    {
        return $this->container['ship_type'];
    }

    /**
     * Sets ship_type
     *
     * @param string $ship_type ship_type
     *
     * @return $this
     */
    public function setShipType($ship_type)
    {
        $this->container['ship_type'] = $ship_type;

        return $this;
    }

    /**
     * Gets billing_phone_number
     *
     * @return string
     */
    public function getBillingPhoneNumber()
    {
        return $this->container['billing_phone_number'];
    }

    /**
     * Sets billing_phone_number
     *
     * @param string $billing_phone_number billing_phone_number
     *
     * @return $this
     */
    public function setBillingPhoneNumber($billing_phone_number)
    {
        $this->container['billing_phone_number'] = $billing_phone_number;

        return $this;
    }

    /**
     * Gets shipping_phone_number
     *
     * @return string
     */
    public function getShippingPhoneNumber()
    {
        return $this->container['shipping_phone_number'];
    }

    /**
     * Sets shipping_phone_number
     *
     * @param string $shipping_phone_number shipping_phone_number
     *
     * @return $this
     */
    public function setShippingPhoneNumber($shipping_phone_number)
    {
        $this->container['shipping_phone_number'] = $shipping_phone_number;

        return $this;
    }

    /**
     * Gets shipping_name
     *
     * @return string
     */
    public function getShippingName()
    {
        return $this->container['shipping_name'];
    }

    /**
     * Sets shipping_name
     *
     * @param string $shipping_name shipping_name
     *
     * @return $this
     */
    public function setShippingName($shipping_name)
    {
        $this->container['shipping_name'] = $shipping_name;

        return $this;
    }

    /**
     * Gets shipping_email
     *
     * @return string
     */
    public function getShippingEmail()
    {
        return $this->container['shipping_email'];
    }

    /**
     * Sets shipping_email
     *
     * @param string $shipping_email shipping_email
     *
     * @return $this
     */
    public function setShippingEmail($shipping_email)
    {
        $this->container['shipping_email'] = $shipping_email;

        return $this;
    }

    /**
     * Gets website
     *
     * @return string
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param string $website website
     *
     * @return $this
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets cart
     *
     * @return string
     */
    public function getCart()
    {
        return $this->container['cart'];
    }

    /**
     * Sets cart
     *
     * @param string $cart cart
     *
     * @return $this
     */
    public function setCart($cart)
    {
        $this->container['cart'] = $cart;

        return $this;
    }

    /**
     * Gets billing_address
     *
     * @return \PhpApi\Khash\BillingAddress[]
     */
    public function getBillingAddress()
    {
        return $this->container['billing_address'];
    }

    /**
     * Sets billing_address
     *
     * @param \PhpApi\Khash\BillingAddress[] $billing_address billing_address
     *
     * @return $this
     */
    public function setBillingAddress($billing_address)
    {
        $this->container['billing_address'] = $billing_address;

        return $this;
    }

    /**
     * Gets billing_address_with_premise
     *
     * @return \PhpApi\Khash\BillingAddressWithPremise[]
     */
    public function getBillingAddressWithPremise()
    {
        return $this->container['billing_address_with_premise'];
    }

    /**
     * Sets billing_address_with_premise
     *
     * @param \PhpApi\Khash\BillingAddressWithPremise[] $billing_address_with_premise billing_address_with_premise
     *
     * @return $this
     */
    public function setBillingAddressWithPremise($billing_address_with_premise)
    {
        $this->container['billing_address_with_premise'] = $billing_address_with_premise;

        return $this;
    }

    /**
     * Gets shipping_address
     *
     * @return \PhpApi\Khash\ShippingAddress[]
     */
    public function getShippingAddress()
    {
        return $this->container['shipping_address'];
    }

    /**
     * Sets shipping_address
     *
     * @param \PhpApi\Khash\ShippingAddress[] $shipping_address shipping_address
     *
     * @return $this
     */
    public function setShippingAddress($shipping_address)
    {
        $this->container['shipping_address'] = $shipping_address;

        return $this;
    }

    /**
     * Gets shipping_address_with_premise
     *
     * @return \PhpApi\Khash\ShippingAddressWithPremise[]
     */
    public function getShippingAddressWithPremise()
    {
        return $this->container['shipping_address_with_premise'];
    }

    /**
     * Sets shipping_address_with_premise
     *
     * @param \PhpApi\Khash\ShippingAddressWithPremise[] $shipping_address_with_premise shipping_address_with_premise
     *
     * @return $this
     */
    public function setShippingAddressWithPremise($shipping_address_with_premise)
    {
        $this->container['shipping_address_with_premise'] = $shipping_address_with_premise;

        return $this;
    }

    /**
     * Gets user_defined_field
     *
     * @return \PhpApi\Khash\UserDefinedField[]
     */
    public function getUserDefinedField()
    {
        return $this->container['user_defined_field'];
    }

    /**
     * Sets user_defined_field
     *
     * @param \PhpApi\Khash\UserDefinedField[] $user_defined_field user_defined_field
     *
     * @return $this
     */
    public function setUserDefinedField($user_defined_field)
    {
        $this->container['user_defined_field'] = $user_defined_field;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


